#Acessar o container
docker exec -it 68de00358cc6 /bin/bash

#Acessar o banco
psql -U azevix_admin -d crm_azevix

# Selecionar os usuários
SELECT id, name, email, role FROM users;

# Update no usuário 1 para ser admin
UPDATE users SET role = 'admin' WHERE id = 1; [antigo]
INSERT INTO user_roles (user_id, role_id) VALUES (1, 1);

#Select contas
SELECT id, user_id, matriz_id, razao_social, nome_fantasia, tipo_conta, segmento, is_active, data_cadastro FROM contas;

#Select roles
SELECT * FROM roles;

#Lista de relations
\dt

#Lista plubic.[nome da tabela]
\s users

#Adicionar usuários
-- Criando os Gerentes
INSERT INTO users (id, name, email, password_hash, is_active, gerente_id) VALUES
(3, 'Gerente Um', 'gerente1@azevix.com.br', 'senha_provisoria_hash', true, NULL),
(4, 'Gerente Dois', 'gerente2@azevix.com.br', 'senha_provisoria_hash', true, NULL);

-- Criando os Vendedores e associando ao Gerente Um (ID 3 e 4)
INSERT INTO users (id, name, email, password_hash, is_active, gerente_id) VALUES
(5, 'Vendedor Um', 'vendedor1@azevix.com.br', 'senha_provisoria_hash', true, 3),
(6, 'Vendedor Dois', 'vendedor2@azevix.com.br', 'senha_provisoria_hash', true, 3),
(7, 'Vendedor Tres', 'vendedor3@azevix.com.br', 'senha_provisoria_hash', true, 4),
(8, 'Vendedor Quatro', 'vendedor4@azevix.com.br', 'senha_provisoria_hash', true, 4);

-- Associando os papéis (Roles) aos novos usuários
-- Lembre-se: Role 'gerente' é ID 2, Role 'vendedor' é ID 3
INSERT INTO user_roles (user_id, role_id) VALUES
(3, 2), -- Gerente Um
(4, 2), -- Gerente Dois
(5, 3), -- Vendedor Um
(6, 3), -- Vendedor Dois
(7, 3), -- Vendedor Tres
(8, 3); -- Vendedor Quatro

-- Atualiza a sequência de IDs para evitar conflitos futuros
SELECT setval('users_id_seq', (SELECT MAX(id) FROM users));

#Verificar os usuários cadastrados
SELECT id, name, gerente_id FROM users;

SELECT u.name, r.name as role FROM users u JOIN user_roles ur ON u.id = ur.user_id JOIN roles r ON ur.role_id = r.id;

# Alterar gerente
-- Altera o gerente do Vendedor Dois (ID 6) para ser o Gerente Dois (ID 4)
UPDATE users SET gerente_id = 4 WHERE id = 6;

-- Altera o gerente do Vendedor Quatro (ID 8) para ser o Gerente Dois (ID 4)
UPDATE users SET gerente_id = 4 WHERE id = 8;


--- Gerar hash
python gerar_hash
após no banco

UPDATE users SET password_hash = 'scrypt:32768:8:1$PSiIEa1a461vKLMm$b7cbe0b408e710117b1eb475d7d840f3bf620ee6f256832f5be72999065cb6dc6cc8ed2e82a02a6e6e258d055d42d27702a48831de6749595a6196a2bddc6826' WHERE id IN (3, 4, 5, 6, 7, 8);

#Popular com clientes
INSERT INTO contas (user_id, nome_fantasia, razao_social, segmento) VALUES
(1, 'Empresa de Teste 1', 'Razão Social Teste 1 SA', 'Tecnologia'),
(1, 'Serviços Rápidos 2', 'Serviços e Cia 2 LTDA', 'Serviços'),
(1, 'Saúde & Bem-Estar 3', 'Clínica Saúde Vital 3', 'Saúde'),
(1, 'Varejo Online 4', 'Varejista Digital 4 ME', 'Varejo'),
(1, 'Educação Inovadora 5', 'Escola do Futuro 5', 'Educação'),
(1, 'Indústria Pesada 6', 'Metalúrgica Aço Forte 6', 'Indústria'),
(1, 'Agro Brasil 7', 'Fazenda Campo Verde 7', 'Agronegócio'),
(1, 'Fintech Confiança 8', 'Soluções Financeiras 8', 'Financeiro'),
(1, 'Imóveis & Cia 9', 'Imobiliária Morar Bem 9', 'Imobiliário'),
(1, 'Consultoria Global 10', 'Consultores Associados 10', 'Serviços'),
(1, 'Data Analytics 11', 'Big Data Corp 11', 'Tecnologia'),
(1, 'Varejo Popular 12', 'Mercado do Povo 12', 'Varejo'),
(1, 'Logística Express 13', 'Transportes Velozes 13', 'Serviços'),
(1, 'Clínica Sorriso 14', 'Odontologia de Ponta 14', 'Saúde'),
(1, 'Universidade Livre 15', 'Centro Educacional 15', 'Educação'),
(1, 'Manufatura Digital 16', 'Indústria 4.0 Soluções 16', 'Indústria'),
(1, 'Exportadora de Grãos 17', 'AgroExport 17', 'Agronegócio'),
(1, 'Crédito Fácil 18', 'Financeira Resolve 18', 'Financeiro');

-- Este comando garante que o próximo ID automático seja 19, evitando conflitos.
SELECT setval('contas_id_seq', (SELECT MAX(id) FROM contas));


## Verificar Log
SELECT * FROM historico_alteracoes WHERE conta_id = 1;