version: '3.8'

services:
  db:
    image: postgres:15
    container_name: crm-azevix-db
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - crm_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: crm-azevix-backend
    env_file:
      - ./.env
    environment:
      FLASK_ENV: production
    depends_on:
      db:
        condition: service_healthy # Agora o backend espera o healthcheck do db passar
    ports:
      - "5090:5090"
    volumes:
      - ./backend:/app
    networks:
      - crm_network

  nginx:
    image: nginx:alpine
    container_name: crm-azevix-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - crm_network

volumes:
  postgres_data:

networks:
  crm_network:
    driver: bridge