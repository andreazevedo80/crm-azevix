CRM de vendas com as seguintes especificações:

Arquitetura Recomendada
Stack Tecnológica:

Backend: Python com Flask
Frontend: HTML, CSS, JavaScript com Bootstrap (responsivo para mobile)
Banco de Dados: PostgreSQL
Servidor Web: Nginx + Gunicorn
Ambiente: Docker (DockerDesktop para Windows 10 PRO)

Fluxo Lógico do Sistema
1. Estrutura do Banco de Dados:
Tabela: leads
- id (chave primária)
- nome_completo
- nome_conta
- email
- telefone_fixo
- telefone_celular
- segmento (dropdown com suas opções)
- status_lead
- data_cadastro
- data_ultima_atualizacao
- observacoes
- historico_interacoes

2. Estados do Lead (Status):

NOVO_LEAD (cadastro inicial)
SEM_INTERESSE
INTERESSE_NAO_ATENDE
TELEFONE_INEXISTENTE
EMAIL_APRESENTACAO_ENVIADO
CONTATADO
AGENDADO
PROPOSTA_ENVIADA
FECHADO

3. Funcionalidades Core:

Dashboard com resumo dos leads por status
Cadastro rápido de leads
Lista filterable por segmento/status
Edição rápida de status
Histórico de interações
Busca por nome/empresa

Docker Desktop + VM é Ideal
Vantagens:
Configuração única: Um docker-compose.yml configura tudo
Portabilidade: Funciona igual em qualquer lugar
Backup simples: Backup dos volumes Docker
Acesso mobile: Interface web responsiva
Escalabilidade: Fácil de expandir depois

Estrutura de Pastas
crm-vendas/
├── backend/
│   ├── app.py
│   ├── Dockerfile
│   ├── init.sql
│   └── requirements.txt
├── frontend/
│   ├── static/
│   │   ├──css/
│  	│   │  └── main.css
│   │   └──js/
│  	│      ├── dashboard.js
│  	│      ├── leads.js
│  	│      └── novo_lead.js
│   └── templates/
│  	    ├── dashboard.html
│  	    ├── leads.html
│  	    └── novo_lead.html
├── docker-compose.yml
├── nginx.conf
├── .env
└── .gitignore

Fase 1: Ambiente

Instalar Docker na máquina/VM
Configurar docker-compose com PostgreSQL + Flask + Nginx
Testar acesso via browser

Fase 2: Backend Básico

Criar modelo de dados (tabela leads)
APIs básicas: criar, listar, editar, deletar leads
Validações e tratamento de erros

Fase 3: Frontend Responsivo

Tela de cadastro simples
Lista de leads com filtros
Formulário de edição inline
Dashboard básico

Fase 4: Funcionalidades Específicas

Sistema de status com workflow
Histórico de interações
Templates de email
Relatórios básicos

Conteúdo dos arquivos (código)

### backend\app.py
from flask import Flask, render_template, request, jsonify, redirect, url_for
from flask_sqlalchemy import SQLAlchemy
from flask_cors import CORS
from datetime import datetime
from dotenv import load_dotenv # Importa a função para carregar variáveis de ambiente
import os
import json

# Carrega as variáveis do arquivo .env
# Esta função procura por um arquivo .env na raiz do projeto
# e carrega suas variáveis para o ambiente.
load_dotenv()

app = Flask(__name__, 
            template_folder='../frontend/templates',
            static_folder='../frontend/static')

# Acessa as variáveis de ambiente carregadas pelo dotenv
# O nome do host do banco de dados deve ser o nome do serviço no docker-compose.yml,
# que é 'db' por padrão.
DB_USER = os.getenv('POSTGRES_USER')
DB_PASSWORD = os.getenv('POSTGRES_PASSWORD')
DB_NAME = os.getenv('POSTGRES_DB')
# O host 'db' é o nome do serviço do container do PostgreSQL no docker-compose.yml
DB_HOST = 'db' 
DB_PORT = '5432' # Porta padrão do PostgreSQL

# Constrói a URI do banco de dados usando as variáveis de ambiente
# Isso garante que as credenciais e o nome do banco de dados venham do .env
app.config['SQLALCHEMY_DATABASE_URI'] = f"postgresql://{DB_USER}:{DB_PASSWORD}@{DB_HOST}:{DB_PORT}/{DB_NAME}"
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
app.config['SECRET_KEY'] = 'crm-azevix-secret-key-2024' # Mantenha sua chave secreta aqui

# Inicializar extensões
db = SQLAlchemy(app)
CORS(app)

# Definir segmentos disponíveis
SEGMENTOS = [
    'Tecnologia',
    'Saúde',
    'Educação',
    'Varejo',
    'Serviços',
    'Indústria',
    'Agronegócio',
    'Financeiro',
    'Imobiliário',
    'Outros'
]

# Definir status dos leads
STATUS_LEADS = [
    'NOVO_LEAD',
    'SEM_INTERESSE',
    'INTERESSE_NAO_ATENDE',
    'TELEFONE_INEXISTENTE',
    'EMAIL_APRESENTACAO_ENVIADO',
    'CONTATADO',
    'AGENDADO',
    'PROPOSTA_ENVIADA',
    'FECHADO'
]

# Modelo de dados para Leads
class Lead(db.Model):
    __tablename__ = 'leads'
    
    id = db.Column(db.Integer, primary_key=True)
    nome_completo = db.Column(db.String(200), nullable=False)
    nome_conta = db.Column(db.String(200), nullable=False)
    email = db.Column(db.String(200), nullable=False)
    telefone_fixo = db.Column(db.String(20))
    telefone_celular = db.Column(db.String(20))
    segmento = db.Column(db.String(50), nullable=False)
    status_lead = db.Column(db.String(50), nullable=False, default='NOVO_LEAD')
    data_cadastro = db.Column(db.DateTime, default=datetime.utcnow)
    data_ultima_atualizacao = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    observacoes = db.Column(db.Text)
    
    # Relacionamento com histórico
    historico_interacoes = db.relationship('HistoricoInteracao', backref='lead', lazy=True, cascade='all, delete-orphan')
    
    def to_dict(self):
        return {
            'id': self.id,
            'nome_completo': self.nome_completo,
            'nome_conta': self.nome_conta,
            'email': self.email,
            'telefone_fixo': self.telefone_fixo,
            'telefone_celular': self.telefone_celular,
            'segmento': self.segmento,
            'status_lead': self.status_lead,
            'data_cadastro': self.data_cadastro.isoformat() if self.data_cadastro else None,
            'data_ultima_atualizacao': self.data_ultima_atualizacao.isoformat() if self.data_ultima_atualizacao else None,
            'observacoes': self.observacoes
        }

# Modelo de dados para Histórico de Interações
class HistoricoInteracao(db.Model):
    __tablename__ = 'historico_interacoes'
    
    id = db.Column(db.Integer, primary_key=True)
    lead_id = db.Column(db.Integer, db.ForeignKey('leads.id'), nullable=False)
    tipo_interacao = db.Column(db.String(50), nullable=False)
    descricao = db.Column(db.Text, nullable=False)
    data_interacao = db.Column(db.DateTime, default=datetime.utcnow)
    
    def to_dict(self):
        return {
            'id': self.id,
            'lead_id': self.lead_id,
            'tipo_interacao': self.tipo_interacao,
            'descricao': self.descricao,
            'data_interacao': self.data_interacao.isoformat() if self.data_interacao else None
        }

# Rotas principais
@app.route('/')
def dashboard():
    return render_template('dashboard.html')

@app.route('/leads')
def leads():
    return render_template('leads.html')

@app.route('/novo-lead')
def novo_lead():
    return render_template('novo_lead.html')

# API Routes
@app.route('/api/leads', methods=['GET'])
def get_leads():
    try:
        # Parâmetros de filtro
        search = request.args.get('search', '')
        status = request.args.get('status', '')
        segmento = request.args.get('segmento', '')
        page = int(request.args.get('page', 1))
        per_page = int(request.args.get('per_page', 10))
        
        # Query base
        query = Lead.query
        
        # Aplicar filtros
        if search:
            query = query.filter(
                db.or_(
                    Lead.nome_completo.ilike(f'%{search}%'),
                    Lead.nome_conta.ilike(f'%{search}%'),
                    Lead.email.ilike(f'%{search}%')
                )
            )
        
        if status:
            query = query.filter(Lead.status_lead == status)
            
        if segmento:
            query = query.filter(Lead.segmento == segmento)
        
        # Ordenar por data de atualização
        query = query.order_by(Lead.data_ultima_atualizacao.desc())
        
        # Paginação
        leads_paginated = query.paginate(
            page=page, 
            per_page=per_page, 
            error_out=False
        )
        
        return jsonify({
            'success': True,
            'leads': [lead.to_dict() for lead in leads_paginated.items],
            'total': leads_paginated.total,
            'pages': leads_paginated.pages,
            'current_page': page,
            'per_page': per_page
        })
        
    except Exception as e:
        return jsonify({'success': False, 'error': str(e)}), 500

@app.route('/api/leads', methods=['POST'])
def create_lead():
    try:
        data = request.get_json()
        
        # Validar dados obrigatórios
        required_fields = ['nome_completo', 'nome_conta', 'email', 'segmento']
        for field in required_fields:
            if not data.get(field):
                return jsonify({'success': False, 'error': f'Campo {field} é obrigatório'}), 400
        
        # Criar novo lead
        lead = Lead(
            nome_completo=data['nome_completo'],
            nome_conta=data['nome_conta'],
            email=data['email'],
            telefone_fixo=data.get('telefone_fixo'),
            telefone_celular=data.get('telefone_celular'),
            segmento=data['segmento'],
            status_lead=data.get('status_lead', 'NOVO_LEAD'),
            observacoes=data.get('observacoes')
        )
        
        db.session.add(lead)
        db.session.commit()
        
        # Registrar primeira interação
        historico = HistoricoInteracao(
            lead_id=lead.id,
            tipo_interacao='OBSERVACAO',
            descricao='Lead cadastrado no sistema'
        )
        db.session.add(historico)
        db.session.commit()
        
        return jsonify({'success': True, 'lead': lead.to_dict()}), 201
        
    except Exception as e:
        db.session.rollback()
        return jsonify({'success': False, 'error': str(e)}), 500

@app.route('/api/leads/<int:lead_id>', methods=['PUT'])
def update_lead(lead_id):
    try:
        lead = Lead.query.get_or_404(lead_id)
        data = request.get_json()
        
        # Atualizar campos
        if 'nome_completo' in data:
            lead.nome_completo = data['nome_completo']
        if 'nome_conta' in data:
            lead.nome_conta = data['nome_conta']
        if 'email' in data:
            lead.email = data['email']
        if 'telefone_fixo' in data:
            lead.telefone_fixo = data['telefone_fixo']
        if 'telefone_celular' in data:
            lead.telefone_celular = data['telefone_celular']
        if 'segmento' in data:
            lead.segmento = data['segmento']
        if 'status_lead' in data:
            lead.status_lead = data['status_lead']
        if 'observacoes' in data:
            lead.observacoes = data['observacoes']
        
        lead.data_ultima_atualizacao = datetime.utcnow()
        db.session.commit()
        
        return jsonify({'success': True, 'lead': lead.to_dict()})
        
    except Exception as e:
        db.session.rollback()
        return jsonify({'success': False, 'error': str(e)}), 500

@app.route('/api/leads/<int:lead_id>', methods=['DELETE'])
def delete_lead(lead_id):
    try:
        lead = Lead.query.get_or_404(lead_id)
        db.session.delete(lead)
        db.session.commit()
        
        return jsonify({'success': True})
        
    except Exception as e:
        db.session.rollback()
        return jsonify({'success': False, 'error': str(e)}), 500

@app.route('/api/leads/<int:lead_id>/historico', methods=['GET'])
def get_lead_history(lead_id):
    try:
        historico = HistoricoInteracao.query.filter_by(lead_id=lead_id).order_by(HistoricoInteracao.data_interacao.desc()).all()
        return jsonify({
            'success': True,
            'historico': [h.to_dict() for h in historico]
        })
        
    except Exception as e:
        return jsonify({'success': False, 'error': str(e)}), 500

@app.route('/api/leads/<int:lead_id>/historico', methods=['POST'])
def add_lead_history(lead_id):
    try:
        data = request.get_json()
        
        historico = HistoricoInteracao(
            lead_id=lead_id,
            tipo_interacao=data['tipo_interacao'],
            descricao=data['descricao']
        )
        
        db.session.add(historico)
        db.session.commit()
        
        return jsonify({'success': True, 'historico': historico.to_dict()}), 201
        
    except Exception as e:
        db.session.rollback()
        return jsonify({'success': False, 'error': str(e)}), 500

@app.route('/api/dashboard/stats', methods=['GET'])
def get_dashboard_stats():
    try:
        # Estatísticas gerais
        total_leads = Lead.query.count()
        
        # Leads por status
        status_stats = {}
        for status in STATUS_LEADS:
            count = Lead.query.filter_by(status_lead=status).count()
            status_stats[status] = count
        
        # Leads por segmento
        segment_stats = {}
        for segmento in SEGMENTOS:
            count = Lead.query.filter_by(segmento=segmento).count()
            segment_stats[segmento] = count
        
        # Leads recentes (últimos 10)
        recent_leads = Lead.query.order_by(Lead.data_cadastro.desc()).limit(10).all()
        
        return jsonify({
            'success': True,
            'total_leads': total_leads,
            'status_stats': status_stats,
            'segment_stats': segment_stats,
            'recent_leads': [lead.to_dict() for lead in recent_leads]
        })
        
    except Exception as e:
        return jsonify({'success': False, 'error': str(e)}), 500

@app.route('/api/config', methods=['GET'])
def get_config():
    return jsonify({
        'success': True,
        'segmentos': SEGMENTOS,
        'status_leads': STATUS_LEADS
    })

# Inicializar banco de dados fora do contexto de requisição
with app.app_context():
    db.create_all()

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5090, debug=True)

### backend\Dockerfile
FROM python:3.11-slim

WORKDIR /app

# Instalar dependências do sistema
RUN apt-get update && apt-get install -y \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Copiar e instalar dependências Python
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copiar código da aplicação
COPY . .

# Expor porta
EXPOSE 5090

# Comando para iniciar a aplicação
CMD ["gunicorn", "--bind", "0.0.0.0:5090", "--workers", "4", "app:app"]

### backend\init.sql
DO
$$
BEGIN
   IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = '${POSTGRES_USER}') THEN
      EXECUTE format('CREATE USER %I WITH ENCRYPTED PASSWORD %L;', '${POSTGRES_USER}', '${POSTGRES_PASSWORD}');
   END IF;
END
$$;

DO
$$
BEGIN
   IF NOT EXISTS (SELECT FROM pg_database WHERE datname = '${POSTGRES_DB}') THEN
      EXECUTE format('CREATE DATABASE %I OWNER %I;', '${POSTGRES_DB}', '${POSTGRES_USER}');
   END IF;
END
$$;

### backend\requirements.txt
Flask==2.3.3
Flask-SQLAlchemy==3.0.5
Flask-CORS==4.0.0
psycopg2-binary==2.9.7
gunicorn==21.2.0
python-dotenv==1.0.0

### frontend\static\css\main.css
/* frontend/static/css/main.css */

body {
  background-color: #f8f9fa;
  font-family: 'Segoe UI', sans-serif;
}

.navbar-azevix {
  background-color: #0d6efd;
}

.btn-azevix {
  background-color: #0d6efd;
  color: #fff;
  border: none;
}

.btn-azevix:hover {
  background-color: #0b5ed7;
  color: #fff;
}

.card-azevix {
  border: 1px solid #0d6efd;
  box-shadow: 0 0.2rem 0.5rem rgba(13, 110, 253, 0.1);
}

.card-azevix .card-header {
  background-color: #e9f1ff;
  border-bottom: 1px solid #0d6efd;
  color: #0d6efd;
}

.text-azevix {
  color: #0d6efd;
}

.badge.bg-azevix {
  background-color: #0d6efd;
}

.table-hover tbody tr:hover {
  background-color: #eef5ff;
}

### frontend\static\js\dashboard.js
// frontend/static/js/dashboard.js
// Preenche dashboard com dados da API

document.addEventListener("DOMContentLoaded", function () {
  fetch("/api/dashboard/stats")
    .then((res) => res.json())
    .then((data) => {
      if (!data.success) return;

      // Total de leads
      const counter = document.getElementById("total-count");
      if (counter) counter.textContent = data.total_leads;

      // Gráfico por status
      const statusChartCtx = document.getElementById("statusChart");
      if (statusChartCtx) {
        new Chart(statusChartCtx, {
          type: "pie",
          data: {
            labels: Object.keys(data.status_stats),
            datasets: [{
              data: Object.values(data.status_stats),
              backgroundColor: ["#007bff", "#28a745", "#ffc107", "#dc3545", "#6c757d", "#20c997", "#fd7e14"]
            }]
          }
        });
      }

      // Gráfico por segmento
      const segmentChartCtx = document.getElementById("segmentChart");
      if (segmentChartCtx) {
        new Chart(segmentChartCtx, {
          type: "bar",
          data: {
            labels: Object.keys(data.segment_stats),
            datasets: [{
              label: "Leads",
              data: Object.values(data.segment_stats),
              backgroundColor: "#17a2b8"
            }]
          },
          options: {
            indexAxis: 'y'
          }
        });
      }

      // Lista de leads recentes
      const tbody = document.getElementById("recent-leads");
      if (tbody) {
        data.recent_leads.forEach((lead) => {
          const row = document.createElement("tr");
          row.innerHTML = `
            <td>${lead.nome_completo}</td>
            <td>${lead.nome_conta}</td>
            <td>${lead.segmento}</td>
            <td>${lead.status_lead}</td>
            <td>${new Date(lead.data_cadastro).toLocaleDateString()}</td>`;
          tbody.appendChild(row);
        });
      }
    })
    .catch(console.error);
});

### frontend\static\js\leads.js
// frontend/static/js/leads.js

let currentPage = 1;
const perPage = 10;

function fetchLeads() {
  const search = document.getElementById("search").value;
  const status = document.getElementById("status-filter").value;
  const segmento = document.getElementById("segment-filter").value;

  const params = new URLSearchParams({
    search,
    status,
    segmento,
    page: currentPage,
    per_page: perPage
  });

  fetch(`/api/leads?${params.toString()}`)
    .then(res => res.json())
    .then(data => {
      const desktopList = document.getElementById("leads-list-desktop");
      const totalCounter = document.getElementById("total-count");

      desktopList.innerHTML = "";
      data.leads.forEach(lead => {
        const row = document.createElement("tr");
        row.innerHTML = `
          <td>${lead.nome_completo}</td>
          <td>${lead.nome_conta}</td>
          <td>${lead.email}</td>
          <td>${lead.telefone_celular || "-"}</td>
          <td>${lead.segmento}</td>
          <td>${lead.status_lead}</td>
          <td>${new Date(lead.data_ultima_atualizacao).toLocaleDateString()}</td>
          <td>
            <button class="btn btn-sm btn-primary me-1" onclick="openEditModal(${lead.id})">
              <i class="fas fa-edit"></i>
            </button>
            <button class="btn btn-sm btn-danger" onclick="deleteLead(${lead.id})">
              <i class="fas fa-trash"></i>
            </button>
          </td>`;
        desktopList.appendChild(row);
      });

      if (totalCounter) totalCounter.textContent = data.total;
    });
}

function applyFilters() {
  currentPage = 1;
  fetchLeads();
}

function openEditModal(id) {
  fetch(`/api/leads/${id}`)
    .then(res => res.json())
    .then(data => {
      const lead = data.lead;
      document.getElementById("edit-id").value = lead.id;
      document.getElementById("edit-nome").value = lead.nome_completo;
      document.getElementById("edit-conta").value = lead.nome_conta;
      document.getElementById("edit-email").value = lead.email;
      document.getElementById("edit-telefone-fixo").value = lead.telefone_fixo || "";
      document.getElementById("edit-telefone-celular").value = lead.telefone_celular || "";
      document.getElementById("edit-segmento").value = lead.segmento;
      document.getElementById("edit-status").value = lead.status_lead;
      document.getElementById("edit-observacoes").value = lead.observacoes || "";
      new bootstrap.Modal(document.getElementById("editModal")).show();
    });
}

function saveEdit() {
  const id = document.getElementById("edit-id").value;
  const data = {
    nome_completo: document.getElementById("edit-nome").value,
    nome_conta: document.getElementById("edit-conta").value,
    email: document.getElementById("edit-email").value,
    telefone_fixo: document.getElementById("edit-telefone-fixo").value,
    telefone_celular: document.getElementById("edit-telefone-celular").value,
    segmento: document.getElementById("edit-segmento").value,
    status_lead: document.getElementById("edit-status").value,
    observacoes: document.getElementById("edit-observacoes").value
  };

  fetch(`/api/leads/${id}`, {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(data)
  }).then(() => {
    bootstrap.Modal.getInstance(document.getElementById("editModal")).hide();
    fetchLeads();
  });
}

function deleteLead(id) {
  if (!confirm("Deseja realmente excluir este lead?")) return;

  fetch(`/api/leads/${id}`, {
    method: "DELETE"
  }).then(() => fetchLeads());
}

document.addEventListener("DOMContentLoaded", () => {
  fetchLeads();
});

### frontend\static\js\novo_lead.js
// frontend/static/js/novo_lead.js

document.addEventListener("DOMContentLoaded", () => {
  const form = document.getElementById("leadForm");
  const alertContainer = document.getElementById("alert-container");
  const segmentoSelect = document.getElementById("segmento");

  // Preenche opções de segmento
  fetch("/api/config")
    .then(res => res.json())
    .then(data => {
      if (data.success) {
        data.segmentos.forEach(seg => {
          const opt = document.createElement("option");
          opt.value = seg;
          opt.textContent = seg;
          segmentoSelect.appendChild(opt);
        });
      }
    });

  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const formData = new FormData(form);
    const leadData = {};

    for (let [key, value] of formData.entries()) {
      leadData[key] = value;
    }

    fetch("/api/leads", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(leadData)
    })
      .then(res => res.json())
      .then(data => {
        if (data.success) {
          showAlert("Lead cadastrado com sucesso!", "success");
          form.reset();
        } else {
          showAlert(data.error || "Erro ao cadastrar lead.", "danger");
        }
      })
      .catch(() => showAlert("Erro na requisição.", "danger"));
  });

  function showAlert(message, type) {
    alertContainer.innerHTML = `
      <div class="alert alert-${type} alert-dismissible fade show" role="alert">
        ${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
      </div>`;
  }
});

### frontend\templates\dashboard.html
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRM Vendas - Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/static/css/main.css" rel="stylesheet">
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-azevix">
        <div class="container-fluid">
            <a class="navbar-brand text-white fw-bold" href="/">
                <i class="fas fa-chart-line me-2"></i>CRM Azevix
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link text-white active" href="/">
                            <i class="fas fa-tachometer-alt me-1"></i>Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="/leads">
                            <i class="fas fa-users me-1"></i>Leads
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="/novo-lead">
                            <i class="fas fa-plus me-1"></i>Novo Lead
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container-fluid mt-4">
        <div class="row">
            <!-- Estatísticas Gerais -->
            <div class="col-12 mb-4">
                <div class="row" id="stats-cards">
                    <!-- Cards serão preenchidos via JavaScript -->
                </div>
            </div>

            <!-- Gráficos -->
            <div class="col-lg-6 mb-4">
                <div class="card card-azevix">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-chart-pie me-2"></i>Leads por Status
                        </h5>
                    </div>
                    <div class="card-body">
                        <canvas id="statusChart" width="400" height="200"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-lg-6 mb-4">
                <div class="card card-azevix">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-chart-bar me-2"></i>Leads por Segmento
                        </h5>
                    </div>
                    <div class="card-body">
                        <canvas id="segmentChart" width="400" height="200"></canvas>
                    </div>
                </div>
            </div>

            <!-- Leads Recentes -->
            <div class="col-12">
                <div class="card card-azevix">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="fas fa-clock me-2"></i>Leads Recentes
                        </h5>
                        <a href="/leads" class="btn btn-outline-azevix btn-sm">
                            Ver Todos <i class="fas fa-arrow-right ms-1"></i>
                        </a>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Nome</th>
                                        <th>Conta</th>
                                        <th>Segmento</th>
                                        <th>Status</th>
                                        <th>Data</th>
                                    </tr>
                                </thead>
                                <tbody id="recent-leads">
                                    <!-- Preenchido via JavaScript -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="/static/js/dashboard.js"></script>
</body>
</html>

### frontend\templates\leads.html
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRM Vendas - Leads</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/static/css/main.css" rel="stylesheet">
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-azevix">
        <div class="container-fluid">
            <a class="navbar-brand text-white fw-bold" href="/">
                <i class="fas fa-chart-line me-2"></i>CRM Azevix
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link text-white" href="/">
                            <i class="fas fa-tachometer-alt me-1"></i>Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white active" href="/leads">
                            <i class="fas fa-users me-1"></i>Leads
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="/novo-lead">
                            <i class="fas fa-plus me-1"></i>Novo Lead
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container-fluid mt-4">
        <!-- Filtros -->
        <div class="card card-azevix mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-filter me-2"></i>Filtros
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label for="search" class="form-label">Buscar</label>
                        <input type="text" class="form-control" id="search" placeholder="Nome, conta ou email...">
                    </div>
                    <div class="col-md-3">
                        <label for="status-filter" class="form-label">Status</label>
                        <select class="form-select" id="status-filter">
                            <option value="">Todos os Status</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="segment-filter" class="form-label">Segmento</label>
                        <select class="form-select" id="segment-filter">
                            <option value="">Todos os Segmentos</option>
                        </select>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button class="btn btn-azevix w-100" onclick="applyFilters()">
                            <i class="fas fa-search me-1"></i>Filtrar
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Lista de Leads -->
        <div class="card card-azevix">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">
                    <i class="fas fa-users me-2"></i>Lista de Leads
                    <span class="badge bg-azevix ms-2" id="total-count">0</span>
                </h5>
                <a href="/novo-lead" class="btn btn-azevix">
                    <i class="fas fa-plus me-1"></i>Novo Lead
                </a>
            </div>
            <div class="card-body">
                <!-- Loading -->
                <div id="loading" class="text-center py-4">
                    <div class="spinner-border text-azevix" role="status">
                        <span class="visually-hidden">Carregando...</span>
                    </div>
                </div>

                <!-- Tabela Desktop -->
                <div class="table-responsive d-none d-md-block" id="leads-table-desktop">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Nome</th>
                                <th>Conta</th>
                                <th>Email</th>
                                <th>Telefone</th>
                                <th>Segmento</th>
                                <th>Status</th>
                                <th>Última Atualização</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody id="leads-list-desktop">
                            <!-- Preenchido via JavaScript -->
                        </tbody>
                    </table>
                </div>

                <!-- Cards Mobile -->
                <div class="d-md-none" id="leads-cards-mobile">
                    <!-- Preenchido via JavaScript -->
                </div>

                <!-- Paginação -->
                <nav aria-label="Paginação" id="pagination-container" class="mt-4">
                    <!-- Preenchido via JavaScript -->
                </nav>
            </div>
        </div>
    </div>

    <!-- Modal de Edição -->
    <div class="modal fade" id="editModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-edit me-2"></i>Editar Lead
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editForm">
                        <input type="hidden" id="edit-id">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="edit-nome" class="form-label">Nome Completo *</label>
                                <input type="text" class="form-control" id="edit-nome" required>
                            </div>
                            <div class="col-md-6">
                                <label for="edit-conta" class="form-label">Nome da Conta *</label>
                                <input type="text" class="form-control" id="edit-conta" required>
                            </div>
                            <div class="col-md-6">
                                <label for="edit-email" class="form-label">Email *</label>
                                <input type="email" class="form-control" id="edit-email" required>
                            </div>
                            <div class="col-md-6">
                                <label for="edit-telefone-fixo" class="form-label">Telefone Fixo</label>
                                <input type="text" class="form-control" id="edit-telefone-fixo">
                            </div>
                            <div class="col-md-6">
                                <label for="edit-telefone-celular" class="form-label">Telefone Celular</label>
                                <input type="text" class="form-control" id="edit-telefone-celular">
                            </div>
                            <div class="col-md-6">
                                <label for="edit-segmento" class="form-label">Segmento *</label>
                                <select class="form-select" id="edit-segmento" required>
                                    <!-- Preenchido via JavaScript -->
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="edit-status" class="form-label">Status *</label>
                                <select class="form-select" id="edit-status" required>
                                    <!-- Preenchido via JavaScript -->
                                </select>
                            </div>
                            <div class="col-12">
                                <label for="edit-observacoes" class="form-label">Observações</label>
                                <textarea class="form-control" id="edit-observacoes" rows="3"></textarea>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-azevix" onclick="saveEdit()">
                        <i class="fas fa-save me-1"></i>Salvar
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Histórico -->
    <div class="modal fade" id="historyModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-history me-2"></i>Histórico de Interações
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="history-content">
                        <!-- Preenchido via JavaScript -->
                    </div>
                    
                    <!-- Formulário para nova interação -->
                    <hr>
                    <h6>Nova Interação</h6>
                    <form id="historyForm">
                        <input type="hidden" id="history-lead-id">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="history-tipo" class="form-label">Tipo de Interação</label>
                                <select class="form-select" id="history-tipo" required>
                                    <option value="CONTATO">Contato</option>
                                    <option value="EMAIL">Email</option>
                                    <option value="REUNIAO">Reunião</option>
                                    <option value="PROPOSTA">Proposta</option>
                                    <option value="FOLLOW_UP">Follow-up</option>
                                    <option value="OBSERVACAO">Observação</option>
                                </select>
                            </div>
                            <div class="col-12">
                                <label for="history-descricao" class="form-label">Descrição</label>
                                <textarea class="form-control" id="history-descricao" rows="3" required></textarea>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                    <button type="button" class="btn btn-azevix" onclick="addHistory()">
                        <i class="fas fa-plus me-1"></i>Adicionar
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/static/js/leads.js"></script>
</body>
</html>

### frontend\templates\novo_lead.html
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CRM Vendas - Leads</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="/static/css/main.css" rel="stylesheet">
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-azevix">
        <div class="container-fluid">
            <a class="navbar-brand text-white fw-bold" href="/">
                <i class="fas fa-chart-line me-2"></i>CRM Azevix
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link text-white" href="/">
                            <i class="fas fa-tachometer-alt me-1"></i>Dashboard
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white active" href="/leads">
                            <i class="fas fa-users me-1"></i>Leads
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="/novo-lead">
                            <i class="fas fa-plus me-1"></i>Novo Lead
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container-fluid mt-4">
        <!-- Filtros -->
        <div class="card card-azevix mb-4">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="fas fa-filter me-2"></i>Filtros
                </h5>
            </div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label for="search" class="form-label">Buscar</label>
                        <input type="text" class="form-control" id="search" placeholder="Nome, conta ou email...">
                    </div>
                    <div class="col-md-3">
                        <label for="status-filter" class="form-label">Status</label>
                        <select class="form-select" id="status-filter">
                            <option value="">Todos os Status</option>
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="segment-filter" class="form-label">Segmento</label>
                        <select class="form-select" id="segment-filter">
                            <option value="">Todos os Segmentos</option>
                        </select>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button class="btn btn-azevix w-100" onclick="applyFilters()">
                            <i class="fas fa-search me-1"></i>Filtrar
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Lista de Leads -->
        <div class="card card-azevix">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">
                    <i class="fas fa-users me-2"></i>Lista de Leads
                    <span class="badge bg-azevix ms-2" id="total-count">0</span>
                </h5>
                <a href="/novo-lead" class="btn btn-azevix">
                    <i class="fas fa-plus me-1"></i>Novo Lead
                </a>
            </div>
            <div class="card-body">
                <!-- Loading -->
                <div id="loading" class="text-center py-4">
                    <div class="spinner-border text-azevix" role="status">
                        <span class="visually-hidden">Carregando...</span>
                    </div>
                </div>

                <!-- Tabela Desktop -->
                <div class="table-responsive d-none d-md-block" id="leads-table-desktop">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Nome</th>
                                <th>Conta</th>
                                <th>Email</th>
                                <th>Telefone</th>
                                <th>Segmento</th>
                                <th>Status</th>
                                <th>Última Atualização</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody id="leads-list-desktop">
                            <!-- Preenchido via JavaScript -->
                        </tbody>
                    </table>
                </div>

                <!-- Cards Mobile -->
                <div class="d-md-none" id="leads-cards-mobile">
                    <!-- Preenchido via JavaScript -->
                </div>

                <!-- Paginação -->
                <nav aria-label="Paginação" id="pagination-container" class="mt-4">
                    <!-- Preenchido via JavaScript -->
                </nav>
            </div>
        </div>
    </div>

    <!-- Modal de Edição -->
    <div class="modal fade" id="editModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-edit me-2"></i>Editar Lead
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editForm">
                        <input type="hidden" id="edit-id">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="edit-nome" class="form-label">Nome Completo *</label>
                                <input type="text" class="form-control" id="edit-nome" required>
                            </div>
                            <div class="col-md-6">
                                <label for="edit-conta" class="form-label">Nome da Conta *</label>
                                <input type="text" class="form-control" id="edit-conta" required>
                            </div>
                            <div class="col-md-6">
                                <label for="edit-email" class="form-label">Email *</label>
                                <input type="email" class="form-control" id="edit-email" required>
                            </div>
                            <div class="col-md-6">
                                <label for="edit-telefone-fixo" class="form-label">Telefone Fixo</label>
                                <input type="text" class="form-control" id="edit-telefone-fixo">
                            </div>
                            <div class="col-md-6">
                                <label for="edit-telefone-celular" class="form-label">Telefone Celular</label>
                                <input type="text" class="form-control" id="edit-telefone-celular">
                            </div>
                            <div class="col-md-6">
                                <label for="edit-segmento" class="form-label">Segmento *</label>
                                <select class="form-select" id="edit-segmento" required>
                                    <!-- Preenchido via JavaScript -->
                                </select>
                            </div>
                            <div class="col-md-6">
                                <label for="edit-status" class="form-label">Status *</label>
                                <select class="form-select" id="edit-status" required>
                                    <!-- Preenchido via JavaScript -->
                                </select>
                            </div>
                            <div class="col-12">
                                <label for="edit-observacoes" class="form-label">Observações</label>
                                <textarea class="form-control" id="edit-observacoes" rows="3"></textarea>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="button" class="btn btn-azevix" onclick="saveEdit()">
                        <i class="fas fa-save me-1"></i>Salvar
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de Histórico -->
    <div class="modal fade" id="historyModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-history me-2"></i>Histórico de Interações
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="history-content">
                        <!-- Preenchido via JavaScript -->
                    </div>
                    
                    <!-- Formulário para nova interação -->
                    <hr>
                    <h6>Nova Interação</h6>
                    <form id="historyForm">
                        <input type="hidden" id="history-lead-id">
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label for="history-tipo" class="form-label">Tipo de Interação</label>
                                <select class="form-select" id="history-tipo" required>
                                    <option value="CONTATO">Contato</option>
                                    <option value="EMAIL">Email</option>
                                    <option value="REUNIAO">Reunião</option>
                                    <option value="PROPOSTA">Proposta</option>
                                    <option value="FOLLOW_UP">Follow-up</option>
                                    <option value="OBSERVACAO">Observação</option>
                                </select>
                            </div>
                            <div class="col-12">
                                <label for="history-descricao" class="form-label">Descrição</label>
                                <textarea class="form-control" id="history-descricao" rows="3" required></textarea>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                    <button type="button" class="btn btn-azevix" onclick="addHistory()">
                        <i class="fas fa-plus me-1"></i>Adicionar
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/static/js/leads.js"></script>
</body>
</html>

### docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: crm_vendas
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - crm_network

  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql://crm_user:crm_password123@db:5432/crm_vendas
      FLASK_ENV: production
    depends_on:
      - db
    ports:
      - "5090:5090"
    volumes:
      - ./backend:/app
    networks:
      - crm_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - backend
    networks:
      - crm_network

volumes:
  postgres_data:

networks:
  crm_network:
    driver: bridge

### events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    upstream backend {
        server backend:5090;
    }

    server {
        listen 80;
        server_name localhost;

        # Servir arquivos estáticos
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Proxy para API
        location /api/ {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy para rotas principais
        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

ao iniciar do docker-compose da este erro:

E:\PROJETOS\crm-vendas>docker-compose down -v    
[+] Running 1/0
 ✔ Volume crm-vendas_postgres_data  Removed                                                                                                               0.0s 

E:\PROJETOS\crm-vendas>docker-compose up --build
[+] Running 23/7
 - db 14 layers [⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulling                                                                              6                  66.2s [+] Running 23/7                                                                                                                                          7.2s 
[+] Running 23/7[⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulling                                                                              6 - db 14 layers [⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulling                                                                              6
[+] Running 23/7  66.7s
 - db 14 layers [⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulling
 ✔ nginx 8 layers [⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled

[+] Running 23/7  66.7s
 - db 14 layers [⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulling
 ✔ nginx 8 layers [⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled
[+] Running 23/7  66.7s
[+] Running 23/7  66.7s
 - db 14 layers [⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulling
[+] Running 23/7  66.7s
 - db 14 layers [⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulling
[+] Running 23/7  66.7s
[+] Running 23/7  66.7s
[+] Running 23/7  66.7s
[+] Running 23/7  66.7s
[+] Running 23/7  66.7s
[+] Running 23/7  66.7s
[+] Running 24/7  66.7s
 ✔ db 14 layers [⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled
 ✔ nginx 8 layers [⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled





[+] Building 14.0s (12/12) FINISHED                                                                                                                            
 => [backend internal] load build definition from Dockerfile                                                                                                   
 => => transferring dockerfile: 529B                                                                                                                           
 => [backend internal] load .dockerignore                                                                                                                      
 => => transferring context: 2B                                                                                                                                
 => [backend internal] load metadata for docker.io/library/python:3.11-slim                                                                                    
 => [backend auth] library/python:pull token for registry-1.docker.io                                                                                          
 => [backend 1/6] FROM docker.io/library/python:3.11-slim@sha256:139020233cc412efe4c8135b0efe1c7569dc8b28ddd88bddb109b764f8977e30                              
 => [backend internal] load build context                                                                                                                      
 => => transferring context: 618B                                                                                                                              
 => CACHED [backend 2/6] WORKDIR /app                                                                                                                          
 => CACHED [backend 3/6] RUN apt-get update && apt-get install -y     postgresql-client     && rm -rf /var/lib/apt/lists/*                                     
 => CACHED [backend 4/6] COPY requirements.txt .                                                                                                               
 => CACHED [backend 5/6] RUN pip install --no-cache-dir -r requirements.txt                                                                                    
 => [backend 6/6] COPY . .                                                                                                                                     
 => [backend] exporting to image                                                                                                                               
 => => exporting layers                                                                                                                                        
 => => writing image sha256:8a10045583cb775f457bd8703f7dc1e28d8080aa6b7176b3e00a46327ebb505e                                                                   
 => => naming to docker.io/library/crm-vendas-backend                                                                                                          
[+] Running 5/5
 ✔ Network crm-vendas_crm_network     Created
 ✔ Volume "crm-vendas_postgres_data"  Created
 ✔ Container crm-vendas-db-1          Created
 ✔ Container crm-vendas-backend-1     Created
 ✔ Container crm-vendas-nginx-1       Created
Attaching to crm-vendas-backend-1, crm-vendas-db-1, crm-vendas-nginx-1
crm-vendas-db-1       | The files belonging to this database system will be owned by user "postgres".
crm-vendas-db-1       | This user must also own the server process.
crm-vendas-db-1       | 
crm-vendas-db-1       | The database cluster will be initialized with locale "en_US.utf8".
crm-vendas-db-1       | The default database encoding has accordingly been set to "UTF8".
crm-vendas-db-1       | The default text search configuration will be set to "english".
crm-vendas-db-1       | 
crm-vendas-db-1       | Data page checksums are disabled.
crm-vendas-db-1       | 
crm-vendas-db-1       | fixing permissions on existing directory /var/lib/postgresql/data ... ok
crm-vendas-db-1       | creating subdirectories ... ok
crm-vendas-db-1       | selecting dynamic shared memory implementation ... posix
crm-vendas-db-1       | selecting default max_connections ... 100
crm-vendas-db-1       | selecting default shared_buffers ... 128MB
crm-vendas-db-1       | selecting default time zone ... Etc/UTC
crm-vendas-db-1       | creating configuration files ... ok
crm-vendas-db-1       | running bootstrap script ... ok
crm-vendas-backend-1  | [2025-07-05 18:23:35 +0000] [1] [INFO] Starting gunicorn 21.2.0
crm-vendas-backend-1  | [2025-07-05 18:23:35 +0000] [1] [INFO] Listening at: http://0.0.0.0:5090 (1)
crm-vendas-backend-1  | [2025-07-05 18:23:35 +0000] [1] [INFO] Using worker: sync
crm-vendas-backend-1  | [2025-07-05 18:23:35 +0000] [6] [INFO] Booting worker with pid: 6
crm-vendas-backend-1  | [2025-07-05 18:23:35 +0000] [7] [INFO] Booting worker with pid: 7
crm-vendas-backend-1  | [2025-07-05 18:23:35 +0000] [8] [INFO] Booting worker with pid: 8
crm-vendas-backend-1  | [2025-07-05 18:23:35 +0000] [9] [INFO] Booting worker with pid: 9
crm-vendas-nginx-1    | /docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
crm-vendas-nginx-1    | /docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
crm-vendas-nginx-1    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
crm-vendas-nginx-1    | 10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
crm-vendas-nginx-1    | 10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
crm-vendas-nginx-1    | /docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
crm-vendas-nginx-1    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
crm-vendas-nginx-1    | /docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
crm-vendas-nginx-1    | /docker-entrypoint.sh: Configuration complete; ready for start up
crm-vendas-db-1       | performing post-bootstrap initialization ... ok
crm-vendas-db-1       | initdb: warning: enabling "trust" authentication for local connections
crm-vendas-db-1       | initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next time you run
crm-vendas-db-1       | syncing data to disk ... ok
crm-vendas-db-1       | 
crm-vendas-db-1       | 
crm-vendas-db-1       | Success. You can now start the database server using:
crm-vendas-db-1       | 
crm-vendas-db-1       |     pg_ctl -D /var/lib/postgresql/data -l logfile start
crm-vendas-db-1       | 
crm-vendas-backend-1  | [2025-07-05 18:23:51 +0000] [6] [ERROR] Exception in worker process
crm-vendas-backend-1  | Traceback (most recent call last):
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
crm-vendas-backend-1  |     self._dbapi_connection = engine.raw_connection()
crm-vendas-backend-1  |                              ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3297, in raw_connection
crm-vendas-backend-1  |     return self.pool.connect()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
crm-vendas-backend-1  |     return _ConnectionFairy._checkout(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1264, in _checkout
crm-vendas-backend-1  |     fairy = _ConnectionRecord.checkout(pool)
crm-vendas-backend-1  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 713, in checkout
crm-vendas-backend-1  |     rec = pool._do_get()
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 179, in _do_get
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 177, in _do_get
crm-vendas-backend-1  |     return self._create_connection()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
crm-vendas-backend-1  |     return _ConnectionRecord(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 675, in __init__
crm-vendas-backend-1  |     self.__connect()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 901, in __connect
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 897, in __connect
crm-vendas-backend-1  |     self.dbapi_connection = connection = pool._invoke_creator(self)
crm-vendas-backend-1  |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 646, in connect
crm-vendas-backend-1  |     return dialect.connect(*cargs, **cparams)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 625, in connect
crm-vendas-backend-1  |     return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py", line 122, in connect
crm-vendas-backend-1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  | psycopg2.OperationalError: connection to server at "db" (172.26.0.2), port 5432 failed: Connection refused
crm-vendas-backend-1  |         Is the server running on that host and accepting TCP/IP connections?
crm-vendas-backend-1  | 
crm-vendas-backend-1  | 
crm-vendas-backend-1  | The above exception was the direct cause of the following exception:
crm-vendas-backend-1  | 
crm-vendas-backend-1  | Traceback (most recent call last):
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/arbiter.py", line 609, in spawn_worker
crm-vendas-backend-1  |     worker.init_process()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/workers/base.py", line 134, in init_process
crm-vendas-backend-1  |     self.load_wsgi()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/workers/base.py", line 146, in load_wsgi
crm-vendas-backend-1  |     self.wsgi = self.app.wsgi()
crm-vendas-backend-1  |                 ^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/base.py", line 67, in wsgi
crm-vendas-backend-1  |     self.callable = self.load()
crm-vendas-backend-1  |                     ^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/wsgiapp.py", line 58, in load
crm-vendas-backend-1  |     return self.load_wsgiapp()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/wsgiapp.py", line 48, in load_wsgiapp
crm-vendas-backend-1  |     return util.import_app(self.app_uri)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/util.py", line 371, in import_app
crm-vendas-backend-1  |     mod = importlib.import_module(module)
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/importlib/__init__.py", line 126, in import_module
crm-vendas-backend-1  |     return _bootstrap._gcd_import(name[level:], package, level)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1147, in _find_and_load_unlocked
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap_external>", line 940, in exec_module
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
crm-vendas-backend-1  |   File "/app/app.py", line 327, in <module>
crm-vendas-backend-1  |     db.create_all()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/flask_sqlalchemy/extension.py", line 887, in create_all
crm-vendas-backend-1  |     self._call_for_binds(bind_key, "create_all")
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/flask_sqlalchemy/extension.py", line 868, in _call_for_binds
crm-vendas-backend-1  |     getattr(metadata, op_name)(bind=engine)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/schema.py", line 5924, in create_all
crm-vendas-backend-1  |     bind._run_ddl_visitor(
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3247, in _run_ddl_visitor
crm-vendas-backend-1  |     with self.begin() as conn:
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/contextlib.py", line 137, in __enter__
crm-vendas-backend-1  |     return next(self.gen)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3237, in begin
crm-vendas-backend-1  |     with self.connect() as conn:
crm-vendas-backend-1  |          ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3273, in connect
crm-vendas-backend-1  |     return self._connection_cls(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
crm-vendas-backend-1  |     Connection._handle_dbapi_exception_noconnection(
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2436, in _handle_dbapi_exception_noconnection
crm-vendas-backend-1  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
crm-vendas-backend-1  |     self._dbapi_connection = engine.raw_connection()
crm-vendas-backend-1  |                              ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3297, in raw_connection
crm-vendas-backend-1  |     return self.pool.connect()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
crm-vendas-backend-1  |     return _ConnectionFairy._checkout(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1264, in _checkout
crm-vendas-backend-1  |     fairy = _ConnectionRecord.checkout(pool)
crm-vendas-backend-1  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 713, in checkout
crm-vendas-backend-1  |     rec = pool._do_get()
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 179, in _do_get
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 177, in _do_get
crm-vendas-backend-1  |     return self._create_connection()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
crm-vendas-backend-1  |     return _ConnectionRecord(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 675, in __init__
crm-vendas-backend-1  |     self.__connect()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 901, in __connect
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 897, in __connect
crm-vendas-backend-1  |     self.dbapi_connection = connection = pool._invoke_creator(self)
crm-vendas-backend-1  |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 646, in connect
crm-vendas-backend-1  |     return dialect.connect(*cargs, **cparams)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 625, in connect
crm-vendas-backend-1  |     return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py", line 122, in connect
crm-vendas-backend-1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  | sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at "db" (172.26.0.2), port 5432 failed: Connection re
crm-vendas-backend-1  |         Is the server running on that host and accepting TCP/IP connections?
crm-vendas-backend-1  | 
crm-vendas-backend-1  | (Background on this error at: https://sqlalche.me/e/20/e3q8)
crm-vendas-backend-1  | [2025-07-05 18:23:51 +0000] [6] [INFO] Worker exiting (pid: 6)
crm-vendas-backend-1  | [2025-07-05 18:23:51 +0000] [7] [ERROR] Exception in worker process
crm-vendas-backend-1  | Traceback (most recent call last):
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
crm-vendas-backend-1  |     self._dbapi_connection = engine.raw_connection()
crm-vendas-backend-1  |                              ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3297, in raw_connection
crm-vendas-backend-1  |     return self.pool.connect()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
crm-vendas-backend-1  |     return _ConnectionFairy._checkout(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1264, in _checkout
crm-vendas-backend-1  |     fairy = _ConnectionRecord.checkout(pool)
crm-vendas-backend-1  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 713, in checkout
crm-vendas-backend-1  |     rec = pool._do_get()
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 179, in _do_get
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 177, in _do_get
crm-vendas-backend-1  |     return self._create_connection()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
crm-vendas-db-1       | waiting for server to start....2025-07-05 18:23:51.830 UTC [49] LOG:  starting PostgreSQL 15.13 (Debian 15.13-1.pgdg120+1) on x86_64-pc
crm-vendas-backend-1  |     return _ConnectionRecord(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 675, in __init__
crm-vendas-backend-1  |     self.__connect()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 901, in __connect
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 897, in __connect
crm-vendas-backend-1  |     self.dbapi_connection = connection = pool._invoke_creator(self)
crm-vendas-backend-1  |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 646, in connect
crm-vendas-backend-1  |     return dialect.connect(*cargs, **cparams)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 625, in connect
crm-vendas-backend-1  |     return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py", line 122, in connect
crm-vendas-backend-1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  | psycopg2.OperationalError: connection to server at "db" (172.26.0.2), port 5432 failed: Connection refused
crm-vendas-backend-1  |         Is the server running on that host and accepting TCP/IP connections?
crm-vendas-backend-1  | 
crm-vendas-backend-1  | 
crm-vendas-db-1       | 2025-07-05 18:23:51.935 UTC [49] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
crm-vendas-backend-1  | The above exception was the direct cause of the following exception:
crm-vendas-backend-1  | 
crm-vendas-backend-1  | Traceback (most recent call last):
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/arbiter.py", line 609, in spawn_worker
crm-vendas-backend-1  |     worker.init_process()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/workers/base.py", line 134, in init_process
crm-vendas-backend-1  |     self.load_wsgi()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/workers/base.py", line 146, in load_wsgi
crm-vendas-backend-1  |     self.wsgi = self.app.wsgi()
crm-vendas-backend-1  |                 ^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/base.py", line 67, in wsgi
crm-vendas-backend-1  |     self.callable = self.load()
crm-vendas-backend-1  |                     ^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/wsgiapp.py", line 58, in load
crm-vendas-backend-1  |     return self.load_wsgiapp()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/wsgiapp.py", line 48, in load_wsgiapp
crm-vendas-backend-1  |     return util.import_app(self.app_uri)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/util.py", line 371, in import_app
crm-vendas-backend-1  |     mod = importlib.import_module(module)
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/importlib/__init__.py", line 126, in import_module
crm-vendas-backend-1  |     return _bootstrap._gcd_import(name[level:], package, level)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1147, in _find_and_load_unlocked
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap_external>", line 940, in exec_module
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
crm-vendas-backend-1  |   File "/app/app.py", line 327, in <module>
crm-vendas-backend-1  |     db.create_all()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/flask_sqlalchemy/extension.py", line 887, in create_all
crm-vendas-backend-1  |     self._call_for_binds(bind_key, "create_all")
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/flask_sqlalchemy/extension.py", line 868, in _call_for_binds
crm-vendas-backend-1  |     getattr(metadata, op_name)(bind=engine)
crm-vendas-db-1       | 2025-07-05 18:23:52.398 UTC [52] LOG:  database system was shut down at 2025-07-05 18:23:37 UTC
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/schema.py", line 5924, in create_all
crm-vendas-backend-1  |     bind._run_ddl_visitor(
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3247, in _run_ddl_visitor
crm-vendas-backend-1  |     with self.begin() as conn:
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/contextlib.py", line 137, in __enter__
crm-vendas-backend-1  |     return next(self.gen)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3237, in begin
crm-vendas-backend-1  |     with self.connect() as conn:
crm-vendas-backend-1  |          ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3273, in connect
crm-vendas-backend-1  |     return self._connection_cls(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
crm-vendas-backend-1  |     Connection._handle_dbapi_exception_noconnection(
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2436, in _handle_dbapi_exception_noconnection
crm-vendas-backend-1  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
crm-vendas-backend-1  |     self._dbapi_connection = engine.raw_connection()
crm-vendas-backend-1  |                              ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3297, in raw_connection
crm-vendas-backend-1  |     return self.pool.connect()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
crm-vendas-backend-1  |     return _ConnectionFairy._checkout(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1264, in _checkout
crm-vendas-backend-1  |     fairy = _ConnectionRecord.checkout(pool)
crm-vendas-backend-1  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 713, in checkout
crm-vendas-backend-1  |     rec = pool._do_get()
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^
crm-vendas-db-1       | 2025-07-05 18:23:52.484 UTC [49] LOG:  database system is ready to accept connections
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 179, in _do_get
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 177, in _do_get
crm-vendas-backend-1  |     return self._create_connection()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
crm-vendas-backend-1  |     return _ConnectionRecord(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 675, in __init__
crm-vendas-backend-1  |     self.__connect()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 901, in __connect
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 897, in __connect
crm-vendas-backend-1  |     self.dbapi_connection = connection = pool._invoke_creator(self)
crm-vendas-db-1       |  done
crm-vendas-backend-1  |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-db-1       | server started
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 646, in connect
crm-vendas-backend-1  |     return dialect.connect(*cargs, **cparams)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 625, in connect
crm-vendas-backend-1  |     return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py", line 122, in connect
crm-vendas-backend-1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  | sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at "db" (172.26.0.2), port 5432 failed: Connection re
crm-vendas-backend-1  |         Is the server running on that host and accepting TCP/IP connections?
crm-vendas-backend-1  | 
crm-vendas-backend-1  | (Background on this error at: https://sqlalche.me/e/20/e3q8)
crm-vendas-backend-1  | [2025-07-05 18:23:51 +0000] [8] [ERROR] Exception in worker process
crm-vendas-backend-1  | Traceback (most recent call last):
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
crm-vendas-backend-1  |     self._dbapi_connection = engine.raw_connection()
crm-vendas-backend-1  |                              ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3297, in raw_connection
crm-vendas-backend-1  |     return self.pool.connect()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
crm-vendas-backend-1  |     return _ConnectionFairy._checkout(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1264, in _checkout
crm-vendas-backend-1  |     fairy = _ConnectionRecord.checkout(pool)
crm-vendas-backend-1  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 713, in checkout
crm-vendas-backend-1  |     rec = pool._do_get()
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 179, in _do_get
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 177, in _do_get
crm-vendas-backend-1  |     return self._create_connection()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
crm-vendas-backend-1  |     return _ConnectionRecord(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 675, in __init__
crm-vendas-backend-1  |     self.__connect()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 901, in __connect
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 897, in __connect
crm-vendas-backend-1  |     self.dbapi_connection = connection = pool._invoke_creator(self)
crm-vendas-backend-1  |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 646, in connect
crm-vendas-backend-1  |     return dialect.connect(*cargs, **cparams)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 625, in connect
crm-vendas-backend-1  |     return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py", line 122, in connect
crm-vendas-backend-1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  | psycopg2.OperationalError: connection to server at "db" (172.26.0.2), port 5432 failed: Connection refused
crm-vendas-backend-1  |         Is the server running on that host and accepting TCP/IP connections?
crm-vendas-backend-1  | 
crm-vendas-backend-1  | 
crm-vendas-backend-1  | The above exception was the direct cause of the following exception:
crm-vendas-backend-1  | 
crm-vendas-backend-1  | Traceback (most recent call last):
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/arbiter.py", line 609, in spawn_worker
crm-vendas-backend-1  |     worker.init_process()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/workers/base.py", line 134, in init_process
crm-vendas-backend-1  |     self.load_wsgi()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/workers/base.py", line 146, in load_wsgi
crm-vendas-backend-1  |     self.wsgi = self.app.wsgi()
crm-vendas-backend-1  |                 ^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/base.py", line 67, in wsgi
crm-vendas-backend-1  |     self.callable = self.load()
crm-vendas-backend-1  |                     ^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/wsgiapp.py", line 58, in load
crm-vendas-backend-1  |     return self.load_wsgiapp()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/wsgiapp.py", line 48, in load_wsgiapp
crm-vendas-backend-1  |     return util.import_app(self.app_uri)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/util.py", line 371, in import_app
crm-vendas-backend-1  |     mod = importlib.import_module(module)
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/importlib/__init__.py", line 126, in import_module
crm-vendas-backend-1  |     return _bootstrap._gcd_import(name[level:], package, level)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1147, in _find_and_load_unlocked
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap_external>", line 940, in exec_module
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
crm-vendas-backend-1  |   File "/app/app.py", line 327, in <module>
crm-vendas-backend-1  |     db.create_all()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/flask_sqlalchemy/extension.py", line 887, in create_all
crm-vendas-backend-1  |     self._call_for_binds(bind_key, "create_all")
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/flask_sqlalchemy/extension.py", line 868, in _call_for_binds
crm-vendas-backend-1  |     getattr(metadata, op_name)(bind=engine)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/schema.py", line 5924, in create_all
crm-vendas-backend-1  |     bind._run_ddl_visitor(
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3247, in _run_ddl_visitor
crm-vendas-backend-1  |     with self.begin() as conn:
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/contextlib.py", line 137, in __enter__
crm-vendas-backend-1  |     return next(self.gen)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3237, in begin
crm-vendas-backend-1  |     with self.connect() as conn:
crm-vendas-backend-1  |          ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3273, in connect
crm-vendas-backend-1  |     return self._connection_cls(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
crm-vendas-backend-1  |     Connection._handle_dbapi_exception_noconnection(
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2436, in _handle_dbapi_exception_noconnection
crm-vendas-backend-1  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
crm-vendas-backend-1  |     self._dbapi_connection = engine.raw_connection()
crm-vendas-backend-1  |                              ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3297, in raw_connection
crm-vendas-backend-1  |     return self.pool.connect()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
crm-vendas-backend-1  |     return _ConnectionFairy._checkout(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1264, in _checkout
crm-vendas-backend-1  |     fairy = _ConnectionRecord.checkout(pool)
crm-vendas-backend-1  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 713, in checkout
crm-vendas-backend-1  |     rec = pool._do_get()
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 179, in _do_get
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 177, in _do_get
crm-vendas-backend-1  |     return self._create_connection()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
crm-vendas-backend-1  |     return _ConnectionRecord(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 675, in __init__
crm-vendas-backend-1  |     self.__connect()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 901, in __connect
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 897, in __connect
crm-vendas-backend-1  |     self.dbapi_connection = connection = pool._invoke_creator(self)
crm-vendas-backend-1  |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 646, in connect
crm-vendas-backend-1  |     return dialect.connect(*cargs, **cparams)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 625, in connect
crm-vendas-backend-1  |     return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py", line 122, in connect
crm-vendas-backend-1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  | sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at "db" (172.26.0.2), port 5432 failed: Connection re
crm-vendas-backend-1  |         Is the server running on that host and accepting TCP/IP connections?
crm-vendas-backend-1  | 
crm-vendas-backend-1  | (Background on this error at: https://sqlalche.me/e/20/e3q8)
crm-vendas-backend-1  | [2025-07-05 18:23:51 +0000] [8] [INFO] Worker exiting (pid: 8)
crm-vendas-backend-1  | [2025-07-05 18:23:51 +0000] [7] [INFO] Worker exiting (pid: 7)
crm-vendas-backend-1  | [2025-07-05 18:23:51 +0000] [9] [ERROR] Exception in worker process
crm-vendas-backend-1  | Traceback (most recent call last):
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
crm-vendas-backend-1  |     self._dbapi_connection = engine.raw_connection()
crm-vendas-backend-1  |                              ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3297, in raw_connection
crm-vendas-backend-1  |     return self.pool.connect()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
crm-vendas-backend-1  |     return _ConnectionFairy._checkout(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1264, in _checkout
crm-vendas-backend-1  |     fairy = _ConnectionRecord.checkout(pool)
crm-vendas-backend-1  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 713, in checkout
crm-vendas-backend-1  |     rec = pool._do_get()
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 179, in _do_get
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 177, in _do_get
crm-vendas-backend-1  |     return self._create_connection()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
crm-vendas-backend-1  |     return _ConnectionRecord(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 675, in __init__
crm-vendas-backend-1  |     self.__connect()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 901, in __connect
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 897, in __connect
crm-vendas-backend-1  |     self.dbapi_connection = connection = pool._invoke_creator(self)
crm-vendas-backend-1  |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 646, in connect
crm-vendas-backend-1  |     return dialect.connect(*cargs, **cparams)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 625, in connect
crm-vendas-backend-1  |     return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py", line 122, in connect
crm-vendas-backend-1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  | psycopg2.OperationalError: connection to server at "db" (172.26.0.2), port 5432 failed: Connection refused
crm-vendas-backend-1  |         Is the server running on that host and accepting TCP/IP connections?
crm-vendas-backend-1  | 
crm-vendas-backend-1  | 
crm-vendas-backend-1  | The above exception was the direct cause of the following exception:
crm-vendas-backend-1  | 
crm-vendas-backend-1  | Traceback (most recent call last):
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/arbiter.py", line 609, in spawn_worker
crm-vendas-backend-1  |     worker.init_process()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/workers/base.py", line 134, in init_process
crm-vendas-backend-1  |     self.load_wsgi()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/workers/base.py", line 146, in load_wsgi
crm-vendas-backend-1  |     self.wsgi = self.app.wsgi()
crm-vendas-backend-1  |                 ^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/base.py", line 67, in wsgi
crm-vendas-backend-1  |     self.callable = self.load()
crm-vendas-backend-1  |                     ^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/wsgiapp.py", line 58, in load
crm-vendas-backend-1  |     return self.load_wsgiapp()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/app/wsgiapp.py", line 48, in load_wsgiapp
crm-vendas-backend-1  |     return util.import_app(self.app_uri)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/gunicorn/util.py", line 371, in import_app
crm-vendas-backend-1  |     mod = importlib.import_module(module)
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/importlib/__init__.py", line 126, in import_module
crm-vendas-backend-1  |     return _bootstrap._gcd_import(name[level:], package, level)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1204, in _gcd_import
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1176, in _find_and_load
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 1147, in _find_and_load_unlocked
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 690, in _load_unlocked
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap_external>", line 940, in exec_module
crm-vendas-backend-1  |   File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
crm-vendas-backend-1  |   File "/app/app.py", line 327, in <module>
crm-vendas-backend-1  |     db.create_all()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/flask_sqlalchemy/extension.py", line 887, in create_all
crm-vendas-backend-1  |     self._call_for_binds(bind_key, "create_all")
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/flask_sqlalchemy/extension.py", line 868, in _call_for_binds
crm-vendas-backend-1  |     getattr(metadata, op_name)(bind=engine)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/schema.py", line 5924, in create_all
crm-vendas-backend-1  |     bind._run_ddl_visitor(
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3247, in _run_ddl_visitor
crm-vendas-backend-1  |     with self.begin() as conn:
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/contextlib.py", line 137, in __enter__
crm-vendas-backend-1  |     return next(self.gen)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3237, in begin
crm-vendas-backend-1  |     with self.connect() as conn:
crm-vendas-backend-1  |          ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3273, in connect
crm-vendas-backend-1  |     return self._connection_cls(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 147, in __init__
crm-vendas-backend-1  |     Connection._handle_dbapi_exception_noconnection(
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 2436, in _handle_dbapi_exception_noconnection
crm-vendas-backend-1  |     raise sqlalchemy_exception.with_traceback(exc_info[2]) from e
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 145, in __init__
crm-vendas-backend-1  |     self._dbapi_connection = engine.raw_connection()
crm-vendas-backend-1  |                              ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py", line 3297, in raw_connection
crm-vendas-backend-1  |     return self.pool.connect()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 449, in connect
crm-vendas-backend-1  |     return _ConnectionFairy._checkout(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 1264, in _checkout
crm-vendas-backend-1  |     fairy = _ConnectionRecord.checkout(pool)
crm-vendas-backend-1  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 713, in checkout
crm-vendas-backend-1  |     rec = pool._do_get()
crm-vendas-backend-1  |           ^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 179, in _do_get
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py", line 177, in _do_get
crm-vendas-backend-1  |     return self._create_connection()
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 390, in _create_connection
crm-vendas-backend-1  |     return _ConnectionRecord(self)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 675, in __init__
crm-vendas-backend-1  |     self.__connect()
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 901, in __connect
crm-vendas-backend-1  |     with util.safe_reraise():
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py", line 224, in __exit__
crm-vendas-backend-1  |     raise exc_value.with_traceback(exc_tb)
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py", line 897, in __connect
crm-vendas-backend-1  |     self.dbapi_connection = connection = pool._invoke_creator(self)
crm-vendas-backend-1  |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py", line 646, in connect
crm-vendas-backend-1  |     return dialect.connect(*cargs, **cparams)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py", line 625, in connect
crm-vendas-backend-1  |     return self.loaded_dbapi.connect(*cargs, **cparams)  # type: ignore[no-any-return]  # NOQA: E501
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  |   File "/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py", line 122, in connect
crm-vendas-backend-1  |     conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
crm-vendas-backend-1  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
crm-vendas-backend-1  | sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at "db" (172.26.0.2), port 5432 failed: Connection refused
crm-vendas-backend-1  |         Is the server running on that host and accepting TCP/IP connections?
crm-vendas-backend-1  |
crm-vendas-backend-1  | (Background on this error at: https://sqlalche.me/e/20/e3q8)
crm-vendas-backend-1  | [2025-07-05 18:23:51 +0000] [9] [INFO] Worker exiting (pid: 9)
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:9) exited with code 3
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:6) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:7) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:8) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Shutting down: Master
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Reason: Worker failed to boot.
crm-vendas-db-1       | CREATE DATABASE
crm-vendas-db-1       |
crm-vendas-db-1       |
crm-vendas-backend-1  | sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at "db" (172.26.0.2), port 5432 failed: Connection refused
crm-vendas-backend-1  |         Is the server running on that host and accepting TCP/IP connections?
crm-vendas-backend-1  |
crm-vendas-backend-1  | (Background on this error at: https://sqlalche.me/e/20/e3q8)
crm-vendas-backend-1  | [2025-07-05 18:23:51 +0000] [9] [INFO] Worker exiting (pid: 9)
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:9) exited with code 3
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:6) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:7) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:8) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Shutting down: Master
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Reason: Worker failed to boot.
crm-vendas-db-1       | CREATE DATABASE
crm-vendas-db-1       |
crm-vendas-db-1       |
crm-vendas-backend-1  |         Is the server running on that host and accepting TCP/IP connections?
crm-vendas-backend-1  |
crm-vendas-backend-1  | (Background on this error at: https://sqlalche.me/e/20/e3q8)
crm-vendas-backend-1  | [2025-07-05 18:23:51 +0000] [9] [INFO] Worker exiting (pid: 9)
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:9) exited with code 3
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:6) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:7) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:8) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Shutting down: Master
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Reason: Worker failed to boot.
crm-vendas-db-1       | CREATE DATABASE
crm-vendas-db-1       |
crm-vendas-db-1       |
crm-vendas-backend-1  | [2025-07-05 18:23:51 +0000] [9] [INFO] Worker exiting (pid: 9)
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:9) exited with code 3
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:6) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:7) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:8) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Shutting down: Master
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Reason: Worker failed to boot.
crm-vendas-db-1       | CREATE DATABASE
crm-vendas-db-1       |
crm-vendas-db-1       |
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:6) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:7) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:8) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Shutting down: Master
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Reason: Worker failed to boot.
crm-vendas-db-1       | CREATE DATABASE
crm-vendas-db-1       |
crm-vendas-db-1       |
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Worker (pid:8) was sent SIGTERM!
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Shutting down: Master
crm-vendas-backend-1  | [2025-07-05 18:23:52 +0000] [1] [ERROR] Reason: Worker failed to boot.
crm-vendas-db-1       | CREATE DATABASE
crm-vendas-db-1       |
crm-vendas-db-1       |
crm-vendas-db-1       | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/init.sql
crm-vendas-db-1       | 2025-07-05 18:23:54.221 UTC [62] ERROR:  role "crm_user" already exists
crm-vendas-db-1       | 2025-07-05 18:23:54.221 UTC [62] STATEMENT:  CREATE USER crm_user WITH ENCRYPTED PASSWORD 'crm_password123';
crm-vendas-db-1       |
crm-vendas-db-1       |
crm-vendas-db-1       | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/init.sql
crm-vendas-db-1       | 2025-07-05 18:23:54.221 UTC [62] ERROR:  role "crm_user" already exists
crm-vendas-db-1       | 2025-07-05 18:23:54.221 UTC [62] STATEMENT:  CREATE USER crm_user WITH ENCRYPTED PASSWORD 'crm_password123';
crm-vendas-db-1       | /usr/local/bin/docker-entrypoint.sh: running /docker-entrypoint-initdb.d/init.sql
crm-vendas-db-1       | 2025-07-05 18:23:54.221 UTC [62] ERROR:  role "crm_user" already exists
crm-vendas-db-1       | 2025-07-05 18:23:54.221 UTC [62] STATEMENT:  CREATE USER crm_user WITH ENCRYPTED PASSWORD 'crm_password123';
crm-vendas-db-1       | psql:/docker-entrypoint-initdb.d/init.sql:2: ERROR:  role "crm_user" already exists
crm-vendas-backend-1 exited with code 3
crm-vendas-db-1       | psql:/docker-entrypoint-initdb.d/init.sql:2: ERROR:  role "crm_user" already exists
crm-vendas-backend-1 exited with code 3
crm-vendas-db-1 exited with code 3